System.registerDynamic("angular2-google-maps/directives/google-map.js",["angular2/core","../services/google-maps-api-wrapper","../services/marker-manager","../services/info-window-manager"],!0,function(a,b,c){"use strict";var d=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},e=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},f=a("angular2/core"),g=a("../services/google-maps-api-wrapper"),h=a("../services/marker-manager"),i=a("../services/info-window-manager"),j=function(){function a(a,b){this._elem=a,this._mapsWrapper=b,this._longitude=0,this._latitude=0,this._zoom=8,this.disableDoubleClickZoom=!1,this.disableDefaultUI=!1,this.scrollwheel=!0,this.keyboardShortcuts=!0,this.zoomControl=!0,this.mapClick=new f.EventEmitter,this.mapRightClick=new f.EventEmitter,this.mapDblClick=new f.EventEmitter,this.centerChange=new f.EventEmitter}return a.prototype.ngOnInit=function(){var a=this._elem.nativeElement.querySelector(".sebm-google-map-container-inner");this._initMapInstance(a)},a.prototype._initMapInstance=function(a){this._mapsWrapper.createMap(a,{center:{lat:this._latitude,lng:this._longitude},zoom:this._zoom,disableDefaultUI:this.disableDefaultUI,backgroundColor:this.backgroundColor,draggableCursor:this.draggableCursor,draggingCursor:this.draggingCursor,keyboardShortcuts:this.keyboardShortcuts,zoomControl:this.zoomControl}),this._handleMapCenterChange(),this._handleMapZoomChange(),this._handleMapMouseEvents()},a.prototype.ngOnChanges=function(a){this._updateMapOptionsChanges(a)},a.prototype._updateMapOptionsChanges=function(b){var c={},d=Object.keys(b).filter(function(b){return-1!==a._mapOptionsAttributes.indexOf(b)});d.forEach(function(a){c[a]=b[a].currentValue}),this._mapsWrapper.setMapOptions(c)},a.prototype.triggerResize=function(){var a=this;return new Promise(function(b){setTimeout(function(){return a._mapsWrapper.triggerMapEvent("resize").then(function(){return b()})})})},Object.defineProperty(a.prototype,"zoom",{set:function(a){this._zoom=this._convertToDecimal(a,8),"number"==typeof this._zoom&&this._mapsWrapper.setZoom(this._zoom)},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"longitude",{set:function(a){this._longitude=this._convertToDecimal(a),this._updateCenter()},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"latitude",{set:function(a){this._latitude=this._convertToDecimal(a),this._updateCenter()},enumerable:!0,configurable:!0}),a.prototype._convertToDecimal=function(a,b){return void 0===b&&(b=null),"string"==typeof a?parseFloat(a):"number"==typeof a?a:b},a.prototype._updateCenter=function(){"number"==typeof this._latitude&&"number"==typeof this._longitude&&this._mapsWrapper.setCenter({lat:this._latitude,lng:this._longitude})},a.prototype._handleMapCenterChange=function(){var a=this;this._mapsWrapper.subscribeToMapEvent("center_changed").subscribe(function(){a._mapsWrapper.getCenter().then(function(b){a._latitude=b.lat(),a._longitude=b.lng(),a.centerChange.emit({lat:a._latitude,lng:a._longitude})})})},a.prototype._handleMapZoomChange=function(){var a=this;this._mapsWrapper.subscribeToMapEvent("zoom_changed").subscribe(function(){a._mapsWrapper.getZoom().then(function(b){return a._zoom=b})})},a.prototype._handleMapMouseEvents=function(){var a=this,b=[{name:"click",emitter:this.mapClick},{name:"rightclick",emitter:this.mapRightClick},{name:"dblclick",emitter:this.mapDblClick}];b.forEach(function(b){a._mapsWrapper.subscribeToMapEvent(b.name).subscribe(function(a){var c={coords:{lat:a.latLng.lat(),lng:a.latLng.lng()}};b.emitter.emit(c)})})},a._mapOptionsAttributes=["disableDoubleClickZoom","scrollwheel","draggableCursor","draggingCursor","keyboardShortcuts","zoomControl"],a=d([f.Component({selector:"sebm-google-map",providers:[g.GoogleMapsAPIWrapper,h.MarkerManager,i.InfoWindowManager],inputs:["longitude","latitude","zoom","disableDoubleClickZoom","disableDefaultUI","scrollwheel","backgroundColor","draggableCursor","draggingCursor","keyboardShortcuts","zoomControl"],outputs:["mapClick","mapRightClick","mapDblClick","centerChange"],host:{"[class.sebm-google-map-container]":"true"},styles:["\n    .sebm-google-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .sebm-google-map-content {\n      display:none;\n    }\n  "],template:"\n    <div class='sebm-google-map-container-inner'></div>\n    <div class='sebm-google-map-content'>\n      <ng-content></ng-content>\n    </div>\n  "}),e("design:paramtypes",[f.ElementRef,g.GoogleMapsAPIWrapper])],a)}();return b.SebmGoogleMap=j,c.exports}),System.registerDynamic("angular2-google-maps/directives/google-map-marker.js",["angular2/core","../services/marker-manager","./google-map-info-window"],!0,function(a,b,c){"use strict";var d=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},e=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},f=a("angular2/core"),g=a("../services/marker-manager"),h=a("./google-map-info-window"),i=0,j=function(){function a(a){this._markerManager=a,this.draggable=!1,this.markerClick=new f.EventEmitter,this.dragEnd=new f.EventEmitter,this._markerAddedToManger=!1,this._id=(i++).toString()}return a.prototype.ngAfterContentInit=function(){null!=this._infoWindow&&(this._infoWindow.hostMarker=this)},a.prototype.ngOnChanges=function(a){if("number"==typeof this.latitude&&"number"==typeof this.longitude){if(!this._markerAddedToManger)return this._markerManager.addMarker(this),this._markerAddedToManger=!0,void this._addEventListeners();(a.latitude||a.longitude)&&this._markerManager.updateMarkerPosition(this),a.title&&this._markerManager.updateTitle(this),a.label&&this._markerManager.updateLabel(this),a.draggable&&this._markerManager.updateDraggable(this),a.iconUrl&&this._markerManager.updateIcon(this)}},a.prototype._addEventListeners=function(){var a=this;this._markerManager.createEventObservable("click",this).subscribe(function(){null!=a._infoWindow&&a._infoWindow.open(),a.markerClick.next(null)}),this._markerManager.createEventObservable("dragend",this).subscribe(function(b){a.dragEnd.next({coords:{lat:b.latLng.lat(),lng:b.latLng.lng()}})})},a.prototype.id=function(){return this._id},a.prototype.toString=function(){return"SebmGoogleMapMarker-"+this._id.toString()},a.prototype.ngOnDestroy=function(){this._markerManager.deleteMarker(this)},d([f.ContentChild(h.SebmGoogleMapInfoWindow),e("design:type",h.SebmGoogleMapInfoWindow)],a.prototype,"_infoWindow",void 0),a=d([f.Directive({selector:"sebm-google-map-marker",inputs:["latitude","longitude","title","label","draggable: markerDraggable","iconUrl"],outputs:["markerClick","dragEnd"]}),e("design:paramtypes",[g.MarkerManager])],a)}();return b.SebmGoogleMapMarker=j,c.exports}),System.registerDynamic("angular2-google-maps/directives/google-map-info-window.js",["angular2/core","../services/info-window-manager"],!0,function(a,b,c){"use strict";var d=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},e=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},f=a("angular2/core"),g=a("../services/info-window-manager"),h=0,i=function(){function a(a,b){this._infoWindowManager=a,this._el=b,this._infoWindowAddedToManager=!1,this._id=(h++).toString()}return a.prototype.ngOnInit=function(){this.content=this._el.nativeElement.querySelector(".sebm-google-map-info-window-content"),this._infoWindowManager.addInfoWindow(this),this._infoWindowAddedToManager=!0},a.prototype.ngOnChanges=function(a){this._infoWindowAddedToManager&&((a.latitude||a.longitude)&&"number"==typeof this.latitude&&"number"==typeof this.longitude&&this._infoWindowManager.setPosition(this),a.zIndex&&this._infoWindowManager.setZIndex(this),this._setInfoWindowOptions(a))},a.prototype._setInfoWindowOptions=function(b){var c={},d=Object.keys(b).filter(function(b){return-1!==a._infoWindowOptionsInputs.indexOf(b)});d.forEach(function(a){c[a]=b[a].currentValue}),this._infoWindowManager.setOptions(this,c)},a.prototype.open=function(){return this._infoWindowManager.open(this)},a.prototype.close=function(){return this._infoWindowManager.close(this)},a.prototype.id=function(){return this._id},a.prototype.toString=function(){return"SebmGoogleMapInfoWindow-"+this._id.toString()},a.prototype.ngOnDestroy=function(){this._infoWindowManager.deleteInfoWindow(this)},a._infoWindowOptionsInputs=["disableAutoPan","maxWidth"],a=d([f.Component({selector:"sebm-google-map-info-window",inputs:["latitude","longitude","disableAutoPan"],template:"\n    <div class='sebm-google-map-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  "}),e("design:paramtypes",[g.InfoWindowManager,f.ElementRef])],a)}();return b.SebmGoogleMapInfoWindow=i,c.exports}),System.registerDynamic("angular2-google-maps/directives-const.js",["./directives/google-map","./directives/google-map-marker","./directives/google-map-info-window"],!0,function(a,b,c){"use strict";var d=a("./directives/google-map"),e=a("./directives/google-map-marker"),f=a("./directives/google-map-info-window");return b.ANGULAR2_GOOGLE_MAPS_DIRECTIVES=[d.SebmGoogleMap,e.SebmGoogleMapMarker,f.SebmGoogleMapInfoWindow],c.exports}),System.registerDynamic("angular2-google-maps/directives.js",["./directives/google-map","./directives/google-map-marker","./directives/google-map-info-window","./directives-const"],!0,function(a,b,c){"use strict";var d=a("./directives/google-map");b.SebmGoogleMap=d.SebmGoogleMap;var e=a("./directives/google-map-marker");b.SebmGoogleMapMarker=e.SebmGoogleMapMarker;var f=a("./directives/google-map-info-window");b.SebmGoogleMapInfoWindow=f.SebmGoogleMapInfoWindow;var g=a("./directives-const");return b.ANGULAR2_GOOGLE_MAPS_DIRECTIVES=g.ANGULAR2_GOOGLE_MAPS_DIRECTIVES,c.exports}),System.registerDynamic("angular2-google-maps/services/maps-api-loader/noop-maps-api-loader.js",[],!0,function(a,b,c){"use strict";var d=function(){function a(){}return a.prototype.load=function(){if(!window.google||!window.google.maps)throw new Error("Google Maps API not loaded on page. Make sure window.google.maps is available!");return Promise.resolve()},a}();return b.NoOpMapsAPILoader=d,c.exports}),System.registerDynamic("angular2-google-maps/services/google-maps-api-wrapper.js",["angular2/core","rxjs/Observable","./maps-api-loader/maps-api-loader"],!0,function(a,b,c){"use strict";var d=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},e=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},f=a("angular2/core"),g=a("rxjs/Observable"),h=a("./maps-api-loader/maps-api-loader"),i=function(){function a(a,b){var c=this;this._loader=a,this._zone=b,this._map=new Promise(function(a){c._mapResolver=a})}return a.prototype.createMap=function(a,b){var c=this;return this._loader.load().then(function(){var d=new google.maps.Map(a,b);c._mapResolver(d)})},a.prototype.setMapOptions=function(a){this._map.then(function(b){b.setOptions(a)})},a.prototype.createMarker=function(a){return void 0===a&&(a={}),this._map.then(function(b){return a.map=b,new google.maps.Marker(a)})},a.prototype.createInfoWindow=function(a){return this._map.then(function(){return new google.maps.InfoWindow(a)})},a.prototype.subscribeToMapEvent=function(a){var b=this;return g.Observable.create(function(c){b._map.then(function(d){d.addListener(a,function(a){b._zone.run(function(){return c.next(a)})})})})},a.prototype.setCenter=function(a){return this._map.then(function(b){return b.setCenter(a)})},a.prototype.getZoom=function(){return this._map.then(function(a){return a.getZoom()})},a.prototype.setZoom=function(a){return this._map.then(function(b){return b.setZoom(a)})},a.prototype.getCenter=function(){return this._map.then(function(a){return a.getCenter()})},a.prototype.getMap=function(){return this._map},a.prototype.triggerMapEvent=function(a){return this._map.then(function(b){return google.maps.event.trigger(b,a)})},a=d([f.Injectable(),e("design:paramtypes",[h.MapsAPILoader,f.NgZone])],a)}();return b.GoogleMapsAPIWrapper=i,c.exports}),System.registerDynamic("angular2-google-maps/services/marker-manager.js",["angular2/core","rxjs/Observable","./google-maps-api-wrapper"],!0,function(a,b,c){"use strict";var d=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},e=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},f=a("angular2/core"),g=a("rxjs/Observable"),h=a("./google-maps-api-wrapper"),i=function(){function a(a,b){this._mapsWrapper=a,this._zone=b,this._markers=new Map}return a.prototype.deleteMarker=function(a){var b=this,c=this._markers.get(a);return null==c?Promise.resolve():c.then(function(c){return b._zone.run(function(){c.setMap(null),b._markers["delete"](a)})})},a.prototype.updateMarkerPosition=function(a){return this._markers.get(a).then(function(b){return b.setPosition({lat:a.latitude,lng:a.longitude})})},a.prototype.updateTitle=function(a){return this._markers.get(a).then(function(b){return b.setTitle(a.title)})},a.prototype.updateLabel=function(a){return this._markers.get(a).then(function(b){b.setLabel(a.label)})},a.prototype.updateDraggable=function(a){return this._markers.get(a).then(function(b){return b.setDraggable(a.draggable)})},a.prototype.updateIcon=function(a){return this._markers.get(a).then(function(b){return b.setIcon(a.iconUrl)})},a.prototype.addMarker=function(a){var b=this._mapsWrapper.createMarker({position:{lat:a.latitude,lng:a.longitude},label:a.label,draggable:a.draggable,icon:a.iconUrl});this._markers.set(a,b)},a.prototype.getNativeMarker=function(a){return this._markers.get(a)},a.prototype.createEventObservable=function(a,b){var c=this;return g.Observable.create(function(d){c._markers.get(b).then(function(b){b.addListener(a,function(a){return c._zone.run(function(){return d.next(a)})})})})},a=d([f.Injectable(),e("design:paramtypes",[h.GoogleMapsAPIWrapper,f.NgZone])],a)}();return b.MarkerManager=i,c.exports}),System.registerDynamic("angular2-google-maps/services/info-window-manager.js",["angular2/core","./google-maps-api-wrapper","./marker-manager"],!0,function(a,b,c){"use strict";var d=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},e=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},f=a("angular2/core"),g=a("./google-maps-api-wrapper"),h=a("./marker-manager"),i=function(){function a(a,b,c){this._mapsWrapper=a,this._zone=b,this._markerManager=c,this._infoWindows=new Map}return a.prototype.deleteInfoWindow=function(a){var b=this,c=this._infoWindows.get(a);return null==c?Promise.resolve():c.then(function(c){return b._zone.run(function(){c.close(),b._infoWindows["delete"](a)})})},a.prototype.setPosition=function(a){return this._infoWindows.get(a).then(function(b){return b.setPosition({lat:a.latitude,lng:a.longitude})})},a.prototype.setZIndex=function(a){return this._infoWindows.get(a).then(function(b){return b.setZIndex(a.zIndex)})},a.prototype.open=function(a){var b=this;return this._infoWindows.get(a).then(function(c){return null!=a.hostMarker?b._markerManager.getNativeMarker(a.hostMarker).then(function(a){return b._mapsWrapper.getMap().then(function(b){return c.open(b,a)})}):b._mapsWrapper.getMap().then(function(a){return c.open(a)})})},a.prototype.close=function(a){return this._infoWindows.get(a).then(function(a){return a.close()})},a.prototype.setOptions=function(a,b){return this._infoWindows.get(a).then(function(a){return a.setOptions(b)})},a.prototype.addInfoWindow=function(a){var b={content:a.content};"number"==typeof a.latitude&&"number"==typeof a.longitude&&(b.position={lat:a.latitude,lng:a.longitude});var c=this._mapsWrapper.createInfoWindow(b);this._infoWindows.set(a,c)},a=d([f.Injectable(),e("design:paramtypes",[g.GoogleMapsAPIWrapper,f.NgZone,h.MarkerManager])],a)}();return b.InfoWindowManager=i,c.exports}),System.registerDynamic("angular2-google-maps/services/maps-api-loader/maps-api-loader.js",["angular2/core"],!0,function(a,b,c){"use strict";var d=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},e=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},f=a("angular2/core"),g=function(){function a(){}return a=d([f.Injectable(),e("design:paramtypes",[])],a)}();return b.MapsAPILoader=g,c.exports}),System.registerDynamic("angular2-google-maps/services/maps-api-loader/lazy-maps-api-loader.js",["angular2/core","./maps-api-loader"],!0,function(a,b,c){"use strict";var d=this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)},e=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},f=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},g=this&&this.__param||function(a,b){return function(c,d){b(c,d,a)}},h=a("angular2/core"),i=a("./maps-api-loader");!function(a){a[a.HTTP=0]="HTTP",a[a.HTTPS=1]="HTTPS",a[a.AUTO=2]="AUTO"}(b.GoogleMapsScriptProtocol||(b.GoogleMapsScriptProtocol={}));var j=b.GoogleMapsScriptProtocol,k=function(){function a(){this.apiKey=null,this.clientId=null,this.apiVersion="3",this.hostAndPath="maps.googleapis.com/maps/api/js",this.protocol=j.HTTPS,this.libraries=[],this.region=null,this.language=null}return a}();b.LazyMapsAPILoaderConfig=k;var l=new k,m=function(a){function b(b){a.call(this),this._config=b,(null===this._config||void 0===this._config)&&(this._config=l)}return d(b,a),b.prototype.load=function(){if(this._scriptLoadingPromise)return this._scriptLoadingPromise;var a=document.createElement("script");a.type="text/javascript",a.async=!0,a.defer=!0;var b="angular2googlemaps"+(new Date).getMilliseconds();return a.src=this._getScriptSrc(b),this._scriptLoadingPromise=new Promise(function(c,d){window[b]=function(){c()},a.onerror=function(a){d(a)}}),document.body.appendChild(a),this._scriptLoadingPromise},b.prototype._getScriptSrc=function(a){var b,c=this._config&&this._config.protocol||l.protocol;switch(c){case j.AUTO:b="";break;case j.HTTP:b="http:";break;case j.HTTPS:b="https:"}var d=this._config.hostAndPath||l.hostAndPath,e=this._config.apiKey||l.apiKey,f=this._config.clientId||l.clientId,g=this._config.libraries||l.libraries,h=this._config.region||l.region,i=this._config.language||l.language,k={v:this._config.apiVersion||l.apiVersion,callback:a};e&&(k.key=e),f&&(k.client=f),null!=g&&g.length>0&&(k.libraries=g.join(",")),null!=h&&h.length>0&&(k.region=h),null!=i&&i.length>0&&(k.language=i);var m=Object.keys(k).map(function(a,b){var c=0===b?"?":"&";return c+=a+"="+k[a]}).join("");return b+"//"+d+m},b=e([h.Injectable(),g(0,h.Optional()),f("design:paramtypes",[k])],b)}(i.MapsAPILoader);return b.LazyMapsAPILoader=m,c.exports}),System.registerDynamic("angular2-google-maps/services.js",["./services/maps-api-loader/maps-api-loader","./services/maps-api-loader/noop-maps-api-loader","./services/google-maps-api-wrapper","./services/marker-manager","./services/info-window-manager","./services/maps-api-loader/lazy-maps-api-loader"],!0,function(a,b,c){"use strict";var d=a("./services/maps-api-loader/maps-api-loader");b.MapsAPILoader=d.MapsAPILoader;var e=a("./services/maps-api-loader/noop-maps-api-loader");b.NoOpMapsAPILoader=e.NoOpMapsAPILoader;var f=a("./services/google-maps-api-wrapper");b.GoogleMapsAPIWrapper=f.GoogleMapsAPIWrapper;var g=a("./services/marker-manager");b.MarkerManager=g.MarkerManager;var h=a("./services/info-window-manager");b.InfoWindowManager=h.InfoWindowManager;var i=a("./services/maps-api-loader/lazy-maps-api-loader");return b.LazyMapsAPILoader=i.LazyMapsAPILoader,b.LazyMapsAPILoaderConfig=i.LazyMapsAPILoaderConfig,b.GoogleMapsScriptProtocol=i.GoogleMapsScriptProtocol,c.exports}),System.registerDynamic("angular2-google-maps/core.js",["angular2/core","./services/maps-api-loader/maps-api-loader","./services/maps-api-loader/lazy-maps-api-loader","./directives","./services"],!0,function(a,b,c){"use strict";function d(a){for(var c in a)b.hasOwnProperty(c)||(b[c]=a[c])}var e=a("angular2/core"),f=a("./services/maps-api-loader/maps-api-loader"),g=a("./services/maps-api-loader/lazy-maps-api-loader");return d(a("./directives")),d(a("./services")),b.ANGULAR2_GOOGLE_MAPS_PROVIDERS=[new e.Provider(f.MapsAPILoader,{useClass:g.LazyMapsAPILoader})],c.exports});
//# sourceMappingURL=angular2-google-maps.min.js.map