{"version":3,"sources":["google-map.js","directives/google-map.ts"],"names":[],"mappings":"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","file":"directives/google-map.js","sourcesContent":[null,"import {Component, ElementRef, EventEmitter, OnChanges, OnInit, SimpleChange} from 'angular2/core';\nimport {GoogleMapsAPIWrapper} from '../services/google-maps-api-wrapper';\nimport {MarkerManager} from '../services/marker-manager';\nimport {InfoWindowManager} from '../services/info-window-manager';\nimport {LatLng, LatLngLiteral} from '../services/google-maps-types';\nimport {MouseEvent} from '../events';\n\n/**\n * SebMGoogleMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the CSS\n * class `sebm-google-map-container`.\n *\n * ### Example\n * ```typescript\n * import {Component} from 'angular2/core';\n * import {SebmGoogleMap} from 'angular2-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [SebmGoogleMap],\n *  styles: [`\n *    .sebm-google-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <sebm-google-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </sebm-google-map>\n *  `\n * })\n * ```\n */\n@Component({\n  selector: 'sebm-google-map',\n  providers: [GoogleMapsAPIWrapper, MarkerManager, InfoWindowManager],\n  inputs: [\n    'longitude', 'latitude', 'zoom', 'disableDoubleClickZoom', 'disableDefaultUI', 'scrollwheel',\n    'backgroundColor', 'draggableCursor', 'draggingCursor', 'keyboardShortcuts', 'zoomControl'\n  ],\n  outputs: ['mapClick', 'mapRightClick', 'mapDblClick', 'centerChange'],\n  host: {'[class.sebm-google-map-container]': 'true'},\n  styles: [`\n    .sebm-google-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .sebm-google-map-content {\n      display:none;\n    }\n  `],\n  template: `\n    <div class='sebm-google-map-container-inner'></div>\n    <div class='sebm-google-map-content'>\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class SebmGoogleMap implements OnChanges,\n    OnInit {\n  private _longitude: number = 0;\n  private _latitude: number = 0;\n  private _zoom: number = 8;\n  /**\n   * Enables/disables zoom and center on double click. Enabled by default.\n   */\n  disableDoubleClickZoom: boolean = false;\n\n  /**\n   * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n   * value cannot get updated.\n   */\n  disableDefaultUI: boolean = false;\n\n  /**\n   * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n   */\n  scrollwheel: boolean = true;\n\n  /**\n   * Color used for the background of the Map div. This color will be visible when tiles have not\n   * yet loaded as the user pans. This option can only be set when the map is initialized.\n   */\n  backgroundColor: string;\n\n  /**\n   * The name or url of the cursor to display when mousing over a draggable map. This property uses\n   * the css  * cursor attribute to change the icon. As with the css property, you must specify at\n   * least one fallback cursor that is not a URL. For example:\n   * [draggableCursor]=\"'url(http://www.example.com/icon.png), auto;'\"\n   */\n  draggableCursor: string;\n\n  /**\n   * The name or url of the cursor to display when the map is being dragged. This property uses the\n   * css cursor attribute to change the icon. As with the css property, you must specify at least\n   * one fallback cursor that is not a URL. For example:\n   * [draggingCursor]=\"'url(http://www.example.com/icon.png), auto;'\"\n   */\n  draggingCursor: string;\n\n  /**\n   * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n   * enabled by default.\n   */\n  keyboardShortcuts: boolean = true;\n\n  /**\n   * The enabled/disabled state of the Zoom control.\n   */\n  zoomControl: boolean = true;\n\n  /**\n   * Map option attributes that can change over time\n   */\n  private static _mapOptionsAttributes: string[] = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'zoomControl'\n  ];\n\n  /**\n   * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n   * marker or infoWindow).\n   */\n  mapClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n   * on a marker or infoWindow).\n   */\n  mapRightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n   * on a marker or infoWindow).\n   */\n  mapDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event emitter is fired when the map center changes.\n   */\n  centerChange: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\n\n  constructor(private _elem: ElementRef, private _mapsWrapper: GoogleMapsAPIWrapper) {}\n\n  /** @internal */\n  ngOnInit() {\n    const container = this._elem.nativeElement.querySelector('.sebm-google-map-container-inner');\n    this._initMapInstance(container);\n  }\n\n  private _initMapInstance(el: HTMLElement) {\n    this._mapsWrapper.createMap(el, {\n      center: {lat: this._latitude, lng: this._longitude},\n      zoom: this._zoom,\n      disableDefaultUI: this.disableDefaultUI,\n      backgroundColor: this.backgroundColor,\n      draggableCursor: this.draggableCursor,\n      draggingCursor: this.draggingCursor,\n      keyboardShortcuts: this.keyboardShortcuts,\n      zoomControl: this.zoomControl\n    });\n    this._handleMapCenterChange();\n    this._handleMapZoomChange();\n    this._handleMapMouseEvents();\n  }\n\n  /* @internal */\n  ngOnChanges(changes: {[propName: string]: SimpleChange}) {\n    this._updateMapOptionsChanges(changes);\n  }\n\n  private _updateMapOptionsChanges(changes: {[propName: string]: SimpleChange}) {\n    let options: {[propName: string]: any} = {};\n    let optionKeys =\n        Object.keys(changes).filter(k => SebmGoogleMap._mapOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n    this._mapsWrapper.setMapOptions(options);\n  }\n\n  /**\n   * Triggers a resize event on the google map instance.\n   * Returns a promise that gets resolved after the event was triggered.\n   */\n  triggerResize(): Promise<void> {\n    // Note: When we would trigger the resize event and show the map in the same turn (which is a\n    // common case for triggering a resize event), then the resize event would not\n    // work (to show the map), so we trigger the event in a timeout.\n    return new Promise<void>((resolve) => {\n      setTimeout(\n          () => { return this._mapsWrapper.triggerMapEvent('resize').then(() => resolve()); });\n    });\n  }\n\n  /**\n   * Sets the zoom level of the map. The default value is `8`.\n   */\n  set zoom(value: number | string) {\n    this._zoom = this._convertToDecimal(value, 8);\n    if (typeof this._zoom === 'number') {\n      this._mapsWrapper.setZoom(this._zoom);\n    }\n  }\n\n  /**\n   * The longitude that sets the center of the map.\n   */\n  set longitude(value: number | string) {\n    this._longitude = this._convertToDecimal(value);\n    this._updateCenter();\n  }\n\n  /**\n   * The latitude that sets the center of the map.\n   */\n  set latitude(value: number | string) {\n    this._latitude = this._convertToDecimal(value);\n    this._updateCenter();\n  }\n\n  private _convertToDecimal(value: string | number, defaultValue: number = null): number {\n    if (typeof value === 'string') {\n      return parseFloat(value);\n    } else if (typeof value === 'number') {\n      return <number>value;\n    }\n    return defaultValue;\n  }\n\n  private _updateCenter() {\n    if (typeof this._latitude !== 'number' || typeof this._longitude !== 'number') {\n      return;\n    }\n    this._mapsWrapper.setCenter({\n      lat: this._latitude,\n      lng: this._longitude,\n    });\n  }\n\n  private _handleMapCenterChange() {\n    this._mapsWrapper.subscribeToMapEvent<void>('center_changed').subscribe(() => {\n      this._mapsWrapper.getCenter().then((center: LatLng) => {\n        this._latitude = center.lat();\n        this._longitude = center.lng();\n        this.centerChange.emit(<LatLngLiteral>{lat: this._latitude, lng: this._longitude});\n      });\n    });\n  }\n\n  private _handleMapZoomChange() {\n    this._mapsWrapper.subscribeToMapEvent<void>('zoom_changed').subscribe(() => {\n      this._mapsWrapper.getZoom().then((z: number) => this._zoom = z);\n    });\n  }\n\n  private _handleMapMouseEvents() {\n    interface Emitter {\n      emit(value: any): void;\n    }\n    type Event = {name: string, emitter: Emitter};\n\n    const events: Event[] = [\n      {name: 'click', emitter: this.mapClick}, {name: 'rightclick', emitter: this.mapRightClick},\n      {name: 'dblclick', emitter: this.mapDblClick}\n    ];\n\n    events.forEach((e: Event) => {\n      this._mapsWrapper.subscribeToMapEvent<{latLng: LatLng}>(e.name).subscribe(\n          (event: {latLng: LatLng}) => {\n            const value = <MouseEvent>{coords: {lat: event.latLng.lat(), lng: event.latLng.lng()}};\n            e.emitter.emit(value);\n          });\n    });\n  }\n}\n"],"sourceRoot":"/source/"}