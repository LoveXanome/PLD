{"version":3,"sources":["info-window-manager.js","services/info-window-manager.ts"],"names":[],"mappings":"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","file":"services/info-window-manager.js","sourcesContent":[null,"import {Injectable, NgZone} from 'angular2/core';\nimport {SebmGoogleMapInfoWindow} from '../directives/google-map-info-window';\nimport {GoogleMapsAPIWrapper} from './google-maps-api-wrapper';\nimport {MarkerManager} from './marker-manager';\nimport {InfoWindow, InfoWindowOptions} from './google-maps-types';\n\n@Injectable()\nexport class InfoWindowManager {\n  private _infoWindows: Map<SebmGoogleMapInfoWindow, Promise<InfoWindow>> =\n      new Map<SebmGoogleMapInfoWindow, Promise<InfoWindow>>();\n\n  constructor(\n      private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone,\n      private _markerManager: MarkerManager) {}\n\n  deleteInfoWindow(infoWindow: SebmGoogleMapInfoWindow): Promise<void> {\n    const iWindow = this._infoWindows.get(infoWindow);\n    if (iWindow == null) {\n      // info window already deleted\n      return Promise.resolve();\n    }\n    return iWindow.then((i: InfoWindow) => {\n      return this._zone.run(() => {\n        i.close();\n        this._infoWindows.delete(infoWindow);\n      });\n    });\n  }\n\n  setPosition(infoWindow: SebmGoogleMapInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow).then((i: InfoWindow) => i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude\n    }));\n  }\n\n  setZIndex(infoWindow: SebmGoogleMapInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow)\n        .then((i: InfoWindow) => i.setZIndex(infoWindow.zIndex));\n  }\n\n  open(infoWindow: SebmGoogleMapInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow).then((w) => {\n      if (infoWindow.hostMarker != null) {\n        return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\n          return this._mapsWrapper.getMap().then((map) => w.open(map, marker));\n        });\n      }\n      return this._mapsWrapper.getMap().then((map) => w.open(map));\n    });\n  }\n\n  close(infoWindow: SebmGoogleMapInfoWindow): Promise<void> {\n    return this._infoWindows.get(infoWindow).then((w) => w.close());\n  }\n\n  setOptions(infoWindow: SebmGoogleMapInfoWindow, options: InfoWindowOptions) {\n    return this._infoWindows.get(infoWindow).then((i: InfoWindow) => i.setOptions(options));\n  }\n\n  addInfoWindow(infoWindow: SebmGoogleMapInfoWindow) {\n    const options: InfoWindowOptions = {\n      content: infoWindow.content,\n    };\n    if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n      options.position = {lat: infoWindow.latitude, lng: infoWindow.longitude};\n    }\n    const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n    this._infoWindows.set(infoWindow, infoWindowPromise);\n  }\n}\n"],"sourceRoot":"/source/"}